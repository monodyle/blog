---
import Layout from "src/layouts/Layout.astro";
import { getBlogCollection } from "src/lib/content";
import { render } from "src/lib/render";

export async function getStaticPaths() {
  const entries = await getBlogCollection();
  return entries.map((entry) => ({
    params: { slug: entry.slug },
    props: { entry },
  }));
}

const { entry } = Astro.props;
const content = await render(entry.body ?? '');
---

<Layout
  title={`${entry.data.title} â€” monody's blog`}
  description={entry.data.excerpt ?? entry.body?.slice(0, 150)}
  thumbnail={entry.data.image}
>
  <div class="container px-3 py-24">
    <div class="px-6 mb-12 text-center space-y-2">
      {
        entry.data.image && (
          <div class="relative -mx-9 mb-12 rounded-2xl w-[calc(100%+4.5rem)] pt-[52.5%] overflow-hidden">
            <img
              src={entry.data.image}
              alt={entry.data.title}
              loading="lazy"
              class="absolute inset-0 w-full h-full object-cover object-center"
            />
          </div>
        )
      }
      <small class="text-subtle">
        {
          new Intl.DateTimeFormat("en-US", {
            year: "numeric",
            month: "short",
            day: "numeric",
          }).format(new Date(entry.data.date))
        }
      </small>
      <h1 class="text-3xl font-semibold font-serif text-balance lg:px-16">
        {entry.data.title}
      </h1>
      <div class="flex items-center gap-4 justify-center">
        {
          entry.data.tags?.map((tag: string) => (
            <small class="font-medium font-mono uppercase text-[10px] text-subtle">
              {tag}
            </small>
          ))
        }
      </div>
    </div>
    <article class="prose lg:px-6">
      {content}
    </article>
  </div>
</Layout>
